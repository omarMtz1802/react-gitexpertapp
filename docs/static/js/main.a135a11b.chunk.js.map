{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gOAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAuB/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,YC9B3B,IAAMC,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCNCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,mGAEqFO,UAAUF,IAF/F,SAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZY,GAfY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZzB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDbwBK,CAAanB,GAAhCU,EAFuB,EAE5BJ,KAAaO,EAFe,EAEfA,QAEpB,OACI,oCACI,4BAAKb,GAEHa,GAAW,uBAAGjB,UAAU,oCAAb,eACb,yBAAKA,UAAU,aAEPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACLgB,UEbnBY,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,cAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQgD,EAAWd,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIoB,IAAKpB,EACLA,SAAUA,U,MCdtCuB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a135a11b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=KDNoU1ADSiTcfPdvoEWzWxKeixSCi4YB&limit=10&q=${encodeURI(category)}`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}/>\r\n                        )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}